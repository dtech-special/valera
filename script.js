const GEMINI_API_URL = "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent";
const GEMINI_API_KEY = "AIzaSyAoCR0dnPNHF6_aZNit7KKzC_z6fP-GWwU"; // –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π –∫–ª—é—á

function sendMessage() {
  const userInput = document.getElementById('user-input');
  const message = userInput.value.trim();
  if (message === "") return;

  addMessage(message, "user");
  userInput.value = "";

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ Gemini API
  fetch(`${GEMINI_API_URL}?key=${GEMINI_API_KEY}`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      contents: [{ parts: [{ text: message }] }]
    })
  })
  .then(res => res.json())
  .then(data => {
    const reply = data.candidates?.[0]?.content?.parts?.[0]?.text || "–≠—ç—ç... –í–∞–ª–µ—Ä–∞ –Ω–µ –∑–Ω–∞–µ—Ç, —á—Ç–æ —Å–∫–∞–∑–∞—Ç—å ü•¥";
    addMessage(reply, "valera");
  })
  .catch(err => {
    console.error("–û—à–∏–±–∫–∞:", err);
    // Fallback-–æ—Ç–≤–µ—Ç
    const fallbackReplies = [
      "–≠—ç—ç... —Å–ª—ã—à—å, —Ö–∏–∫... —Å–µ—Ä–≤–∞–∫ –ª—ë–≥, —è –∑–∞–ø–∞—Å–Ω–æ–π –í–∞–ª–µ—Ä–∞!",
      "–©–∞-—â–∞, –±—Ä–∞—Ç–∞–Ω... –æ—Å–Ω–æ–≤–Ω–æ–π —è –≤ –æ—Ç–∫–ª—é—á–∫–µ ü•¥",
      "–•–∞-—Ö–∞-—Ö–∞! –î–∞—É–Ω, —Å–µ—Ä–≤–µ—Ä –Ω–µ –ø–∞—à–µ—Ç!"
    ];
    const randomReply = fallbackReplies[Math.floor(Math.random() * fallbackReplies.length)];
    addMessage(randomReply, "valera");
  });
}

function addMessage(text, sender) {
  const chat = document.getElementById('chat');
  const div = document.createElement('div');
  div.className = `message ${sender}`;
  div.textContent = text;
  chat.appendChild(div);
  chat.scrollTop = chat.scrollHeight;
}
